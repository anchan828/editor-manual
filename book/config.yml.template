# review-epubmaker向けの設定ファイルの例。
# yamlファイルをRe:VIEWファイルのある場所に置き、
# 「review-epubmaker yamlファイル」を実行すると、<bookname>.epubファイルが
# 生成されます。
# このファイルはUTF-8エンコーディングで記述してください。

# ブック名(ファイル名になるもの。ASCII範囲の文字を使用)
bookname: book
# 書名
booktitle: エディター拡張
# 著者
aut: 安藤 圭吾

# 以下はオプション
# prt: 出版社
prt: 安藤 圭吾
# asn: Associated name
# ant: Bibliographic antecedent
# clb: 貢献者
# csl: 監修者
# edt: 編集者
edt: 安藤 圭吾
# dsr: デザイナ
# ill: イラストレータ
# pht: 撮影者
# trl: 翻訳者
# date: 刊行日
# date: 2014-8-17
# rights: 権利表記
rights: |
  (C) 2015 kyusyukeigo.com
# description: ブックの説明
description: 効率のいい開発をするために
contact: anchan828@gmail.com
#
# coverfile: カバーページのbody要素内に挿入する内容を記述したファイル名
#coverfile: unibook2-cover.html
# coverimage: cover.png
coverimage: cover.jpg
# 固有IDに使用するドメイン。指定しない場合には、時刻に基づくランダムUUIDが入る
#urnid: http://unibook2.unity-bu.com/
# CSSファイル (yamlファイルおよびRe:VIEWファイルを置いたディレクトリにあること)
#stylesheet: stylesheet.css


# LaTeX用のコマンドを指定する(platex or lualatex)
# texcommand: "platex"
# 目次として抽出するレベル
toclevel: 2
# セクション番号を表示するレベル
secnolevel: 2
# EPUBのバージョン(現時点では2または3。デフォルトは2)
epubversion: 3
# HTMLのバージョン(現時点では4または5。デフォルトは4。epubversionを3にした場合は自動で5に設定される)
htmlversion: 5
# 表紙を出力するか
titlepage: true
# 目次を出力するか
toc: true
# EPUB標準の目次以外に目次を作成するか
mytoc: true
# 奥付を作成するか。デフォルトでは作成されない。trueを指定するとデフォルトの奥付、ファイル名を指定するとそれがcolophon.htmlとしてコピーされる
colophon: true
# XHTML生成後に実行するプログラム。$1:HTMLの生成されたディレクトリ $2:Re:VIEWファイルのあるディレクトリ $3:起動時指定のyamlファイル名
# posthook: hook.sh
# EPUBで表紙をコンテンツに含めるか。デフォルトでは作成されない。yesにするとiBooks等でも最初に表紙が表示されるようになる
epubmaker:
  cover_linear: yes
# review-compileに渡すパラメータ
#params: --stylesheet=stylesheet.css
# Pygmentsカラーリングを利用する (pygments外部gemが必要)
highlight:
   html: pygments

# デバッグフラグ。nullでないときには一時ファイルをカレントディレクトリに作成し、削除もしない
#hook_afterbody: "./hook_afterbody.sh"

#pubhistory: |
#  2014年12月30日 コミックマーケット87版発行


# LaTeX用のdocumentclassを指定する
# LaTeX用のスタイルファイル(styディレクトリ以下に置くこと)
